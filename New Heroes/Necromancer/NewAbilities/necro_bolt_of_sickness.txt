"necro_bolt_of_sickness"
{
    
    
    "AbilityBehavior"       "UNIT_TARGET"
    "AbilityTeamFilter"     "TEAM_ENEMY"
    "AbilityCastRange"      "stat(%CASTER, #rangedAttackRange)"
    "AbilityCastMinRange"   "stat(%CASTER, #rangedAttackMinRange)" 
    "AbilityCooldown"       "0"
    "AbilityAPCost"         "stat(%CASTER, #attackCostAP)"
    "AnimationID"           "SpecialAttack"
    "CastFXId"              "MagicBoltCastFXMega"
    "Icon"                  "BoltOfSickness" 

   
    "AbilitySpecial"
    {
        "01"
        {
            "var_type" "FIELD_EXPRESSION"
            "MinRangedDmg"  "stat(%CASTER, #attackDamage)-1"
        }

        "02"
        {
            "var_type" "FIELD_EXPRESSION"        
            "MaxRangedDmg"  "stat(%CASTER, #attackDamage)+1"
        }

        "03"
        {
            "var_type"       "FIELD_FLOAT"
            "AcidDuration"  "2"
        }
    }


    "OnAbilityAction"
    {
        "TrackingProjectile"
        {
            "Target"               "%TARGET"
            "SourcePos"             "unitPosition(%SOURCE, #CastPoint)"
            "TargetPos"             "unitPosition(%TARGET, #Chest)"
            "Model" "MagicBoltProjectile"

            "Params" 
            {
                "damage" 
                { 
                    "type" "FIELD_FLOAT"
                    "value" "randomI(expr(%MinRangedDmg), expr(%MaxRangedDmg))"
                }
            }
        }
    }

    "OnProjectileHitUnit"
    {
        "Hit"
        {
            "Target" "%TARGET"
            "EffectName" "MagicBoltHitFXMega" 
            "Tags" "stringList(#PROJECTILE, #TARGETED, #MAGICAL)"

            "InitActions"
            {
                "AddDamage"
                {
                    "Type"          "DAMAGE_MAGICAL"
                    "Damage"        "%damage"
                }
            }

            "Actions"
            {
                "Conditional"
                {
                    "Condition"         "isOnState(%TARGET, #DEAD)"
                    "Actions"
                    {
                        "MarkHitLegendary"
                        {
                        }

                        "SpawnUnit"
                        {
                            "UnitName" "#DummyUnit"
                            "Position" "unitPosition(%TARGET)"
                            "UnitGroup" "unitGroup(%TARGET)"
                            "IsAI" "0"
                            "InheritsInitiative" "1"
                            "OnSpawn"
                            {
                                "AttachEffect"
                                {
                                    "EffectName" "AcidFloorExplosionFXMega"
                                    "Target" "%TARGET"
                                }
                
                                "ApplyModifier"
                                {
                                    "ModifierName"      "acid_floor_tile_modifier"
                                    "Target"            "%UNIT"
                                    "Duration"          "%AcidDuration"
                                    "Params"
                                    {
                                        "damage" 
                                        {
                                            "type" "FIELD_FLOAT"
                                            "value" "1"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    "AIConfigB"
    {
        "Selection" 
        {
            "Weight" "2.3"
            "Considerations"
            {

                "Priorizacion Por Distance mas cercano"
                {
                    "Curve" "Linear|-0.1|1|1|0"
                    "Consideration" "DistanceToTarget"
                    "Params"
                    {
                        "MaxRange" "expr(%AbilityCastRange)"  
                    }
                }
            }
        }
    }
}